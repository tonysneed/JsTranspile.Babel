{"version":3,"sources":["generators.js"],"names":[],"mappings":";;eACU,eAAe,EAef,eAAe,EAQf,IAAI;;;AAvBd,SAAU,eAAe;;;;;WACjB,CAAC;;;;WACD,CAAC;;;;WACD,CAAC;;;;;;;CACR;;AAED,IAAI,MAAM,GAAG,eAAe,EAAE,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAAC,AAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAAC,AAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAAC,AAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;;AAAC,AAK3B,SAAU,eAAe;KACf,CAAC;;;;AAAD,KAAC,GAAG,CAAC;;;SAAC,IAAI;;;;;;WACZ,CAAC;;;AADY,KAAC,EAAE;;;;;;;;;;;;AAGvB,AAID,SAAU,IAAI,CAAC,IAAI,EAAE,MAAM;KAEjB,CAAC;;;;;AADN,KAAC,GAAG,CAAC;;;;;gBACK,IAAI;;;;;;;;AAAT,KAAC;;UACL,MAAM,KAAK,CAAC,EAAE,CAAA;;;;;;;;;WAGZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAER;;;;;AAGD,uBAAmB,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,mIAAE;MAAvC,MAAM;;AACd,SAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACpB","file":"generators.js","sourcesContent":["//Simple generator that returns 3 items on demand\nfunction* numberGenerator() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nvar number = numberGenerator();\nconsole.log(number.next()); //{value: 1, done: false}\nconsole.log(number.next()); //{value: 2, done: false}\nconsole.log(number.next()); //{value: 3, done: true}\nconsole.log(number.next()); //{value: undefined, done: true}\n\n\n\n//Create a generator that returns infinite numbers\nfunction* infiniteNumbers() {\n\tfor (var i = 0;true;i++) {\n\t\tyield i;\n\t}\n}\n\n\n//Create a generator that can take a specific amount from a collection\nfunction* take(coll, number) {\n\tvar i = 0;\n\tfor (var i of coll) {\n\t\tif (number === i++) {\n\t\t\treturn;\n\t\t}\n\t\tyield i;\n\t}\n}\n\n//Use the generators to grab 100 numbers\nfor (var number of take(infiniteNumbers(), 10)) {\n\tconsole.log(number);\n}"],"sourceRoot":"/source/"}